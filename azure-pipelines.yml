pool:
  vmImage: ubuntu-latest

variables:
  tag: '$(Build.BuildId)'
  imageName: 'adicop49/container-scanning-demo'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - checkout: self

    # - task: CmdLine@2
    #   displayName: SemGrep SAST
    #   inputs:
    #     script: |
    #      docker run --rm -v "${PWD}:/src" returntocorp/semgrep semgrep scan --config auto -o semgrep-junit.xml --junit-xml

    # - task: PublishTestResults@2
    #   displayName: Publish SemGrep Results
    #   inputs:
    #     testResultsFormat: "JUnit"
    #     testResultsFiles: "**/semgrep-junit.xml"
    #   condition: succeededOrFailed() 

    - task: Docker@2
      displayName: Build an image
      inputs:
        repository: '$(imageName)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'
    
    - task: CmdLine@2
      displayName: Trivy Vuln Scan
      inputs:
        script: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy image --scanners vuln --exit-code 0 --severity LOW,MEDIUM --format template --template "@contrib/junit.tpl" -o junit-report-high-crit.xml --ignore-unfixed $(imageName):$(tag)

    - task: PublishTestResults@2
      displayName: Publish Trivy Test Results
      inputs:
        testResultsFormat: "JUnit"
        testResultsFiles: "**/junit-report-*.xml"
      condition: succeededOrFailed() 

          # docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy image --scanners vuln --exit-code 1 --severity HIGH,CRITICAL --format template --template "@contrib/junit.tpl" -o junit-report-high-crit.xml --ignore-unfixed $(imageName):$(tag)


# --format template --template "@template/junit.tpl" -o junit-report-high-crit.xml <image>