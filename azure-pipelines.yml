variables:
  vmImageName: "ubuntu-latest"
  DevkubernetesServiceEndpoint: “dev-cluster-sc"
  ProdkubernetesServiceEndpoint: “prod-cluster-sc"
  DevimagePullSecret: ‘dev-secret'
  ProdimagePullSecret: ‘prod-secret'

stages:

- ${{ if or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'PullRequest')) }}:
  - stage: Test
    displayName: Test stage
    jobs:
      - job: Test
        displayName: Test job
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "Testing ..."
            displayName: 'Test job script'
            
- ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/dev'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - stage: BuildDev
    displayName: Build Dev
#     condition: eq(variables['Build.SourceBranch'], 'refs/heads/dev')
    jobs:
      - job: BuildJobDev
        displayName: Build Dev Job
        pool:
          vmImage: $(vmImageName)
        steps:
#           - checkout: self
#             persistCredentials: true
          - script: echo "Building Dev & sc is $(DevkubernetesServiceEndpoint)"
            displayName: 'Build Dev job script'

  - stage: DeployDev
    displayName: Deploy to Dev
    dependsOn: BuildDev
#     condition: eq(variables['Build.SourceBranch'], 'refs/heads/dev')
    jobs:
      - job: DeployJobDev
        displayName: Deploy to Dev
        pool:
          vmImage: $(vmImageName)
        steps:
#           - checkout: self
#             persistCredentials: true
          - script: echo "Deploying Dev & secret is $(DevimagePullSecret)"
            displayName: 'Deploy Dev job script'

- ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/prod'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - stage: BuildProd
    displayName: Build Prod
#     condition: eq(variables['Build.SourceBranch'], 'refs/heads/prod')
    jobs:
      - job: BuildJobProd
        displayName: Build Prod Job
        pool:
          vmImage: $(vmImageName)
        steps:
#           - checkout: self
#             persistCredentials: true
          - script: echo "Building Prod & sc is $(ProdkubernetesServiceEndpoint)"
            displayName: 'Build Prod job script'

  - stage: DeployProd
    displayName: Deploy to Prod
    dependsOn: BuildProd
#     condition: eq(variables['Build.SourceBranch'], 'refs/heads/prod')
    jobs:
      - job: DeployJobProd
        displayName: Deploy to Prod
        pool:
          vmImage: $(vmImageName)
        steps:
#           - checkout: self
#             persistCredentials: true
          - script: echo "Deploying Prod & secret is $(ProdimagePullSecret)"
            displayName: 'Deploy Prod job script'
