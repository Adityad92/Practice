variables:
  vmImageName: "ubuntu-latest" # Agent VM image name

# trigger:
#   - production
#   - pull_request

pool: AWS-agents

stages:
# - ${{ if or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'PullRequest')) }}:
- ${{ if or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'PullRequest'), ne(variables['Build.SourceBranch'], 'refs/heads/production')) }}:
# - ${{ if or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'PullRequest'), and(eq(variables['Build.Reason'], 'Manual'), ne(variables['Build.SourceBranch'], 'refs/heads/production'))) }}:
  - stage: Test
    displayName: Test stage
#     condition: eq(variables['Build.Reason'], 'IndividualCI')
    jobs:
      - job: Test
        displayName: Test job
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "Testing ..."
            displayName: 'Test job script'
            
  - stage: semgrep
    displayName: semgrep stage
#     condition: eq(variables['Build.Reason'], 'IndividualCI')
    jobs:
      - job: semgrep
        displayName: semgrep job
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "semgrep ..."
            displayName: 'semgrep job script'
            
# - ${{ if and(eq(variables['Build.Reason'], 'ContinuousIntegration'), eq(variables['Build.SourceBranchName'], 'refs/heads/production')) }}:
- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/production') }}:
  - stage: Build
    displayName: Build stage
#     condition: contains(variables['Build.SourceBranch'], 'production/') #use Build.SourceBranch
#     and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/production'), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: Build
        displayName: Build job
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "Building ..."
            displayName: 'Build job script'
            
  - stage: Deploy
    displayName: Deploy to Dev
    dependsOn: Build
#     condition: contains(variables['Build.SourceBranch'], 'production/') #use Build.SourceBranch
#     and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/production'), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: Deploy
        displayName: Deploy to AKS
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "Deploying ..."
            displayName: 'Deploy job script'
